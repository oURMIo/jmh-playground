plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version "${shadowVersion}"
  id 'application'
  id 'jacoco'
}

group = 'com.home'
version = '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
  options.annotationProcessorPath = configurations.annotationProcessor
}

application {
  mainModule = 'com.home.jmhplayground'
}

dependencies {
  implementation("org.openjdk.jmh:jmh-core:$jmhVersion")
  annotationProcessor("org.openjdk.jmh:jmh-generator-annprocess:$jmhVersion")

  testImplementation platform('org.junit:junit-bom:5.12.2')
  testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

compileJava {
  options.annotationProcessorPath = configurations.annotationProcessor
}

configurations {
  benchmarks
  annotationProcessor
}

jacoco {
  toolVersion = "0.8.12"
}

tasks.jacocoTestReport {
  dependsOn test

  sourceDirectories.setFrom(files("src/main/java"))
  classDirectories.setFrom(files("build/classes/java/main"))
  executionData.setFrom(files("build/jacoco/test.exec"))

  reports {
    xml.required = true
    csv.required = false
    html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
  }
}

shadowJar {
  manifest {
    attributes 'Main-Class': 'org.openjdk.jmh.Main'
  }
  mainClassName = 'org.openjdk.jmh.Main'
}

jar {
  enabled = false
}

build {
  dependsOn shadowJar
}
